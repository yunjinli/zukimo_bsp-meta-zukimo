From 36a14451cd48a94d9b82abb9cd407cf1e3689bbd Mon Sep 17 00:00:00 2001
From: Stefan Stuerke <stefan.stuerke@dreamchip.de>
Date: Mon, 6 Mar 2023 16:39:31 +0100
Subject: [PATCH 05/12] zukimo: debug startup

Upstream-Status: Pending

---
 common/board_f.c | 58 ++++++++++++++++++++++++------------------------
 1 file changed, 29 insertions(+), 29 deletions(-)

diff --git a/common/board_f.c b/common/board_f.c
index f3c1ab53b1..9e2dc1ec3d 100644
--- a/common/board_f.c
+++ b/common/board_f.c
@@ -133,7 +133,7 @@ static int display_text_info(void)
 	text_base = CONFIG_SYS_MONITOR_BASE;
 #endif
 
-	debug("U-Boot code: %08lX -> %08lX  BSS: -> %08lX\n",
+	printf("U-Boot code: %08lX -> %08lX  BSS: -> %08lX\n",
 	      text_base, bss_start, bss_end);
 #endif
 
@@ -154,7 +154,7 @@ static int print_resetinfo(void)
 	for (ret = uclass_first_device_check(UCLASS_SYSRESET, &dev); dev;
 			ret = uclass_next_device_check(&dev)) {
 		if (ret) {
-			debug("%s: %s sysreset device (error: %d)\n",
+			printf("%s: %s sysreset device (error: %d)\n",
 			      __func__, dev->name, ret);
 			continue;
 		}
@@ -180,14 +180,14 @@ static int print_cpuinfo(void)
 
 	dev = cpu_get_current_dev();
 	if (!dev) {
-		debug("%s: Could not get CPU device\n",
+		printf("%s: Could not get CPU device\n",
 		      __func__);
 		return -ENODEV;
 	}
 
 	ret = cpu_get_desc(dev, desc, sizeof(desc));
 	if (ret) {
-		debug("%s: Could not get CPU description (err = %d)\n",
+		printf("%s: Could not get CPU description (err = %d)\n",
 		      dev->name, ret);
 		return ret;
 	}
@@ -239,16 +239,16 @@ static int show_dram_config(void)
 	unsigned long long size;
 	int i;
 
-	debug("\nRAM Configuration:\n");
+	printf("\nRAM Configuration:\n");
 	for (i = size = 0; i < CONFIG_NR_DRAM_BANKS; i++) {
 		size += gd->bd->bi_dram[i].size;
-		debug("Bank #%d: %llx ", i,
+		printf("Bank #%d: %llx ", i,
 		      (unsigned long long)(gd->bd->bi_dram[i].start));
 #ifdef DEBUG
 		print_size(gd->bd->bi_dram[i].size, "\n");
 #endif
 	}
-	debug("\nDRAM:  ");
+	printf("\nDRAM:  ");
 
 	print_size(gd->ram_size, "");
 	if (!sizes_near(gd->ram_size, size)) {
@@ -313,7 +313,7 @@ static int setup_spl_handoff(void)
 #if CONFIG_IS_ENABLED(HANDOFF)
 	gd->spl_handoff = bloblist_find(BLOBLISTT_U_BOOT_SPL_HANDOFF,
 					sizeof(struct spl_handoff));
-	debug("Found SPL hand-off info %p\n", gd->spl_handoff);
+	printf("Found SPL hand-off info %p\n", gd->spl_handoff);
 #endif
 
 	return 0;
@@ -354,11 +354,11 @@ __weak int arch_setup_dest_addr(void)
 
 static int setup_dest_addr(void)
 {
-	debug("Monitor len: %08lX\n", gd->mon_len);
+	printf("Monitor len: %08lX\n", gd->mon_len);
 	/*
 	 * Ram is setup, size stored in gd !!
 	 */
-	debug("Ram size: %08llX\n", (unsigned long long)gd->ram_size);
+	printf("Ram size: %08llX\n", (unsigned long long)gd->ram_size);
 #if CONFIG_VAL(SYS_MEM_TOP_HIDE)
 	/*
 	 * Subtract specified amount of memory to hide so that it won't
@@ -378,7 +378,7 @@ static int setup_dest_addr(void)
 	gd->ram_top = gd->ram_base + get_effective_memsize();
 	gd->ram_top = board_get_usable_ram_top(gd->mon_len);
 	gd->relocaddr = gd->ram_top;
-	debug("Ram top: %08llX\n", (unsigned long long)gd->ram_top);
+	printf("Ram top: %08llX\n", (unsigned long long)gd->ram_top);
 
 	return arch_setup_dest_addr();
 }
@@ -391,7 +391,7 @@ static int reserve_pram(void)
 
 	reg = env_get_ulong("pram", 10, CFG_PRAM);
 	gd->relocaddr -= (reg << 10);		/* size is in kB */
-	debug("Reserving %ldk for protected RAM at %08lx\n", reg,
+	printf("Reserving %ldk for protected RAM at %08lx\n", reg,
 	      gd->relocaddr);
 	return 0;
 }
@@ -419,7 +419,7 @@ static int reserve_video(void)
 		ret = video_reserve(&addr);
 		if (ret)
 			return ret;
-		debug("Reserving %luk for video at: %08lx\n",
+		printf("Reserving %luk for video at: %08lx\n",
 		      ((unsigned long)gd->relocaddr - addr) >> 10, addr);
 		gd->relocaddr = addr;
 	}
@@ -432,7 +432,7 @@ static int reserve_trace(void)
 #ifdef CONFIG_TRACE
 	gd->relocaddr -= CONFIG_TRACE_BUFFER_SIZE;
 	gd->trace_buff = map_sysmem(gd->relocaddr, CONFIG_TRACE_BUFFER_SIZE);
-	debug("Reserving %luk for trace data at: %08lx\n",
+	printf("Reserving %luk for trace data at: %08lx\n",
 	      (unsigned long)CONFIG_TRACE_BUFFER_SIZE >> 10, gd->relocaddr);
 #endif
 
@@ -453,7 +453,7 @@ static int reserve_uboot(void)
 		gd->relocaddr &= ~(65536 - 1);
 	#endif
 
-		debug("Reserving %ldk for U-Boot at: %08lx\n",
+		printf("Reserving %ldk for U-Boot at: %08lx\n",
 		      gd->mon_len >> 10, gd->relocaddr);
 	}
 
@@ -488,7 +488,7 @@ static int reserve_noncached(void)
 		MMU_SECTION_SIZE;
 	gd->start_addr_sp -= ALIGN(CONFIG_SYS_NONCACHED_MEMORY,
 				   MMU_SECTION_SIZE);
-	debug("Reserving %dM for noncached_alloc() at: %08lx\n",
+	printf("Reserving %dM for noncached_alloc() at: %08lx\n",
 	      CONFIG_SYS_NONCACHED_MEMORY >> 20, gd->start_addr_sp);
 
 	return 0;
@@ -499,7 +499,7 @@ static int reserve_noncached(void)
 static int reserve_malloc(void)
 {
 	gd->start_addr_sp = reserve_stack_aligned(TOTAL_MALLOC_LEN);
-	debug("Reserving %dk for malloc() at: %08lx\n",
+	printf("Reserving %dk for malloc() at: %08lx\n",
 	      TOTAL_MALLOC_LEN >> 10, gd->start_addr_sp);
 #ifdef CONFIG_SYS_NONCACHED_MEMORY
 	reserve_noncached();
@@ -516,7 +516,7 @@ static int reserve_board(void)
 		gd->bd = (struct bd_info *)map_sysmem(gd->start_addr_sp,
 						      sizeof(struct bd_info));
 		memset(gd->bd, '\0', sizeof(struct bd_info));
-		debug("Reserving %zu Bytes for Board Info at: %08lx\n",
+		printf("Reserving %zu Bytes for Board Info at: %08lx\n",
 		      sizeof(struct bd_info), gd->start_addr_sp);
 	}
 	return 0;
@@ -526,7 +526,7 @@ static int reserve_global_data(void)
 {
 	gd->start_addr_sp = reserve_stack_aligned(sizeof(gd_t));
 	gd->new_gd = (gd_t *)map_sysmem(gd->start_addr_sp, sizeof(gd_t));
-	debug("Reserving %zu Bytes for Global Data at: %08lx\n",
+	printf("Reserving %zu Bytes for Global Data at: %08lx\n",
 	      sizeof(gd_t), gd->start_addr_sp);
 	return 0;
 }
@@ -544,7 +544,7 @@ static int reserve_fdt(void)
 
 			gd->start_addr_sp = reserve_stack_aligned(gd->fdt_size);
 			gd->new_fdt = map_sysmem(gd->start_addr_sp, gd->fdt_size);
-			debug("Reserving %lu Bytes for FDT at: %08lx\n",
+			printf("Reserving %lu Bytes for FDT at: %08lx\n",
 			      gd->fdt_size, gd->start_addr_sp);
 		}
 	}
@@ -559,7 +559,7 @@ static int reserve_bootstage(void)
 
 	gd->start_addr_sp = reserve_stack_aligned(size);
 	gd->new_bootstage = map_sysmem(gd->start_addr_sp, size);
-	debug("Reserving %#x Bytes for bootstage at: %08lx\n", size,
+	printf("Reserving %#x Bytes for bootstage at: %08lx\n", size,
 	      gd->start_addr_sp);
 #endif
 
@@ -598,7 +598,7 @@ static int reserve_bloblist(void)
 
 static int display_new_sp(void)
 {
-	debug("New Stack Pointer is: %08lx\n", gd->start_addr_sp);
+	printf("New Stack Pointer is: %08lx\n", gd->start_addr_sp);
 
 	return 0;
 }
@@ -653,7 +653,7 @@ static int reloc_bootstage(void)
 	if (gd->new_bootstage) {
 		int size = bootstage_get_size();
 
-		debug("Copying bootstage from %p to %p, size %x\n",
+		printf("Copying bootstage from %p to %p, size %x\n",
 		      gd->bootstage, gd->new_bootstage, size);
 		memcpy(gd->new_bootstage, gd->bootstage, size);
 		gd->bootstage = gd->new_bootstage;
@@ -672,13 +672,13 @@ static int reloc_bloblist(void)
 	 */
 	if ((gd->flags & GD_FLG_SKIP_RELOC) &&
 	    CONFIG_BLOBLIST_SIZE == CONFIG_BLOBLIST_SIZE_RELOC) {
-		debug("Not relocating bloblist\n");
+		printf("Not relocating bloblist\n");
 		return 0;
 	}
 	if (gd->new_bloblist) {
 		int size = CONFIG_BLOBLIST_SIZE;
 
-		debug("Copying bloblist from %p to %p, size %x\n",
+		printf("Copying bloblist from %p to %p, size %x\n",
 		      gd->bloblist, gd->new_bloblist, size);
 		bloblist_reloc(gd->new_bloblist, CONFIG_BLOBLIST_SIZE_RELOC,
 			       gd->bloblist, size);
@@ -712,10 +712,10 @@ static int setup_reloc(void)
 	memcpy(gd->new_gd, (char *)gd, sizeof(gd_t));
 
 	if (gd->flags & GD_FLG_SKIP_RELOC) {
-		debug("Skipping relocation due to flag\n");
+		printf("Skipping relocation due to flag\n");
 	} else {
-		debug("Relocation Offset is: %08lx\n", gd->reloc_off);
-		debug("Relocating to %08lx, new gd at %08lx, sp at %08lx\n",
+		printf("Relocation Offset is: %08lx\n", gd->reloc_off);
+		printf("Relocating to %08lx, new gd at %08lx, sp at %08lx\n",
 		      gd->relocaddr, (ulong)map_to_sysmem(gd->new_gd),
 		      gd->start_addr_sp);
 	}
@@ -779,7 +779,7 @@ static int initf_bootstage(void)
 
 		ret = bootstage_unstash(stash, CONFIG_BOOTSTAGE_STASH_SIZE);
 		if (ret && ret != -ENOENT) {
-			debug("Failed to unstash bootstage: err=%d\n", ret);
+			printf("Failed to unstash bootstage: err=%d\n", ret);
 			return ret;
 		}
 	}
-- 
2.34.1

